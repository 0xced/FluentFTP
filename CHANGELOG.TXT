*** 8/16/2011
Fixed bug in Active mode transfers that caused the code to hang when accepting the incoming connection. 

Changed FtpFileSystemObjectList to implement IEenumerable and changed
all places were list was enumerated to use .ToArray() method of the 
object list. FtpDirectory File and Directory lists no longer return
an array. Please update your code accordingly, in most cases this
should be as simple as using Directories.ToArray() or Files.ToArray()
instead of enumerating the list directly.

Added new exception type FtpCommandException that will be used for
all command failure exceptions instead of FtpException. The exception
object includes the completion code, the message and a property for
easily determining if it's a temporary (4xx) or permanent (5xx) failure.

All custom exception types inherit from FtpException.

Renamed FtpCommandChannel to follow RFC terminology. New name is
FtpControlConnection. LockCommandChannel and UnlockCommandChannel
have also been renamed to LockControlConnection and UnlockControlConnection.

*** 8/15/2011
Removed all internal usage of FtpDataChannel, replaced with FtpDataStream

Fixed spelling error of ReceiveBufferSize property in FtpChannel.cs

Fixed bug introduced in revision 8525 with upload freeze which was
caused by a bug fix to stop a stack overflow which was caused from
FtpDataStream's internal StreamReader.

Fixed but in FtpPassiveChannel with PASV fallback when EPSV fails.

Same bug fix for EPRT.

More text encoding bug fixes. Encoding.Default should be in use 
everywhere now.

Added new ClearListing() method to FtpDirectory to force a reload
on child items.

Removed FtpDataChannel code from project

Updated VS2010/2005 .net 2 project files

*** 8/12/2011
Renamed FtpTransferMode enum to FtpDataType

Renamed FtpDataMode to FtpDataChannelType

Renamed DefaultDataMode property of FtpControlConnection to DataChannelType

Renamed SetTransferMode() of FtpControlConnection method to SetDataType()

Added new FtpDataMode enum for Stream and Block transfers

Added new FtpDataStructure enum, currently only File type structures are
  supported. If this makes no sense read RFC959 3.1.2. Data Structures.

Added new SetDataMode() method FtpControlConnection for specifying
  stream or block transfer modes.

Removed pipelining support from Open*DataChannel() methods to reduce
  complication of code. Little value was added by pipelining just a
  couple of commands and thus doesn't justify complication in the code.

Added DataChannelMode property to FtpControlConnection for setting the default
  data transfer mode, stream or block.

Added new classes FtpDataStream.cs and FtpPassiveStream.cs, FtpActiveStream.cs

Added support for block mode reading
